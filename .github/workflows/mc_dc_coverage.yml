name: CryptoLib Coverage and MC/DC Analysis

on:
  push:
    branches:
      - 258-cyclomatic-complexity-and-mcdc-in-ci
    paths-ignore:
      - 'doc/coverage/line-coverage-badge.svg'
      - 'doc/coverage/branch-coverage-badge.svg'
  pull_request:
    branches:
      - 258-cyclomatic-complexity-and-mcdc-in-ci

jobs:
  coverage:
    runs-on: ubuntu-latest
    container:
      image: ivvitc/cryptolib:20250102

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for branch operations

    - name: Configure Safe Directory
      run: git config --global --add safe.directory $GITHUB_WORKSPACE

    - name: Install GNATcoverage and Dependencies
      run: |
        echo "Installing GNAT and dependencies..."
        apt-get update
        apt-get install -y gnat gprbuild
        echo "GNATcoverage installation completed."

    - name: Build and Run Tests with Coverage Instrumentation
      run: |
        echo "Building the project and running tests with instrumentation..."
        export CFLAGS="-fprofile-arcs -ftest-coverage"
        bash ${GITHUB_WORKSPACE}/support/scripts/build_internal.sh
        echo "Build and test execution completed."

    - name: Perform GNATcoverage Analysis
      run: |
        echo "Running GNATcoverage for MC/DC analysis..."
        mkdir -p doc/coverage
        gnatcov coverage --level=stmt+mcdc \
                         --annotate=xcov \
                         --annotate=html \
                         --output-dir=doc/coverage \
                         --instrumented-dir=build_output_directory
        echo "GNATcoverage analysis completed."

    - name: Generate GNATcoverage Reports
      run: |
        echo "Generating GNATcoverage reports..."
        gnatcov report --level=stmt+mcdc \
                       --output-dir=doc/coverage \
                       --annotate=html --annotate=text
        echo "Report generation completed."

    - name: Generate Coverage Badges
      run: |
        echo "Generating coverage badges..."
        mkdir -p doc/coverage
        LINE_COVERAGE=$(grep -oP '(?<=<coverage line-rate=")[0-9.]+(?=")' doc/coverage/coverage_report.xml | head -n 1)
        BRANCH_COVERAGE=$(grep -oP '(?<=branch-rate=")[0-9.]+(?=")' doc/coverage/coverage_report.xml | head -n 1)
        LINE_COVERAGE_PERCENT=$(printf "%.0f" $(echo "$LINE_COVERAGE * 100" | bc))
        BRANCH_COVERAGE_PERCENT=$(printf "%.0f" $(echo "$BRANCH_COVERAGE * 100" | bc))
        if [ "$LINE_COVERAGE_PERCENT" -ge 80 ]; then LINE_COLOR="brightgreen"; elif [ "$LINE_COVERAGE_PERCENT" -ge 50 ]; then LINE_COLOR="yellow"; else LINE_COLOR="red"; fi
        if [ "$BRANCH_COVERAGE_PERCENT" -ge 80 ]; then BRANCH_COLOR="brightgreen"; elif [ "$BRANCH_COVERAGE_PERCENT" -ge 50 ]; then BRANCH_COLOR="yellow"; else BRANCH_COLOR="red"; fi
        curl -o doc/coverage/line-coverage-badge.svg "https://img.shields.io/badge/line%20coverage-${LINE_COVERAGE_PERCENT}%25-${LINE_COLOR}"
        curl -o doc/coverage/branch-coverage-badge.svg "https://img.shields.io/badge/branch%20coverage-${BRANCH_COVERAGE_PERCENT}%25-${BRANCH_COLOR}"

    - name: Commit and Upload Coverage Reports
      run: |
        git config user.name "github-actions"
        git config user.email "actions@github.com"
        git add doc/coverage/
        git commit -m "Update GNATcoverage reports and badges" || echo "No changes to commit"
        git push origin HEAD

    - name: Archive Coverage Reports
      uses: actions/upload-artifact@v3
      with:
        name: gnat-coverage-reports
        path: doc/coverage
